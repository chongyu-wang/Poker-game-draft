const express = require("express");
const bodyParser = require("body-parser");
const Deck = require(__dirname +'/logic/deck.js');
const player = require(__dirname + '/logic/player.js');
const CircularQueue = require(__dirname + '/CircularQueue.js')

const app = express();

app.use(bodyParser.urlencoded({extended: true}));

app.use(express.static(__dirname + "/views"));
app.set('view engine', 'ejs');

let table = [];
let players = [];
let deck = new Deck();

let BigBlind = null;
let SmallBlind = null;
let Dealer = null;

let CurrentPlayer = null;

let choice = null;


function populate(numPlayers) {
    SmallBlind = new player.Player("George" + 1);
    BigBlind = new player.Player("George" + 2);

    CurrentPlayer = SmallBlind;

    players.push(SmallBlind);
    players.push(BigBlind);
    
    if (numPlayers > 2) {
        Dealer = new player.Player("George" + 3);
        players.push(Dealer);
    }
    if (numPlayers > 3) {
        for (let i = 4; i < numPlayers + 1; i++) {
            let p = new player.Player("George" + i);
            players.push(p);
            console.log(p);
        }
    }
}

function getButtons() {
    BigBlind.updateButton("BB");
    SmallBlind.updateButton("SB");
    Dealer.updateButton("D");
}

function deal() {
    for (let i = 0; i < players.length; i++) {
        let hand = new player.Hand(deck.popCard().filename, deck.popCard().filename);
        players[i].updateHand(hand);
        console.log(players[i]);

    }
}

function addCard() {
    let c = deck.popCard();
    table.push(c.filename);
}

function turn() {
    deck.popCard();
    addCard();
}

function river() {
    turn();
}

function flop() {
    deck.popCard();
    for (let i = 0; i < 3; i++) {
        let c = deck.popCard();
        table.push(c.filename);
    }
}

function getPlayerChoice(c) {
    choice = c;
}

function addCash(amount) {
    for (let i = 0; i < players.length; i++) {
        players[i].buyIn(amount);
    }
}

function rotateBlinds() {

}

function initialize() {
    table = [];
    players = [];
    deck = new Deck();

    deck.shuffleCards();
    populate(5);
    getButtons();
    addCash(1200);
    // players = [];

}

function getAdminChoice(choice) {
    switch(choice) {
        case "Initialize":
            initialize();
            break;
        case "Deal":
            deal();
            break;
        case "Turn":
            turn();
            break;
        case "River":
            river();
            break;
        case "Flop":
            flop();
            break;
    }
}

initialize();

app.get("/", function(req, res) {

    res.render("home", {cards: table, players: players, deck: deck, choice: choice});

});

app.post("/", function(req, res) {
    if (req.body["buttonPressed"]){
        const buttonPressed = req.body.buttonPressed;
        getPlayerChoice(buttonPressed);
    } else {
        const adminButton = req.body.adminButton;
        getAdminChoice(adminButton);
    }
    res.redirect("/");
});



app.listen("3000", function() {
    console.log("Server running on port 3000")
});